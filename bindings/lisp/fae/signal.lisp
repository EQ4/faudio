(in-package :cl-user)
(define-foreign-type signal-type () () (:actual-type :pointer))
(define-parse-method signal () (make-instance 'signal-type))
(defclass signal () ((signal-ptr :initarg :signal-ptr)))
(defmethod translate-to-foreign (x (type signal-type)) (slot-value x 'signal-ptr))
(defmethod translate-from-foreign (x (type signal-type)) (make-instance 'signal :signal-ptr x))
(defcfun (signal-type-of "fae_signal_type_of") type (a signal))
(defcfun (signal-lift "fae_signal_lift") signal (a unary) (b ptr) (c signal))
(defcfun (signal-lift2 "fae_signal_lift2") signal (a binary) (b ptr) (c signal) (d signal))
(defcfun (signal-lift3 "fae_signal_lift3") signal (a ternary) (b ptr) (c signal) (d signal) (e signal))
(defcfun (signal-apply "fae_signal_apply") signal (a processor) (b signal))
(defcfun (signal-apply2 "fae_signal_apply2") signal (a processor) (b signal) (c signal))
(defcfun (signal-apply3 "fae_signal_apply3") signal (a processor) (b signal) (c signal) (d signal))
(defcfun (signal-constant "fae_signal_constant") signal (a ptr))
(defcfun (signal-value "fae_signal_value") signal (a event))
(defcfun (signal-delay "fae_signal_delay") signal (a time) (b signal))
(defcfun (signal-add "fae_signal_add") signal (a signal) (b signal))
(defcfun (signal-subtract "fae_signal_subtract") signal (a signal) (b signal))
(defcfun (signal-multiply "fae_signal_multiply") signal (a signal) (b signal))
(defcfun (signal-power "fae_signal_power") signal (a signal) (b signal))
(defcfun (signal-divide "fae_signal_divide") signal (a signal) (b signal))
(defcfun (signal-modulo "fae_signal_modulo") signal (a signal) (b signal))
(defcfun (signal-absolute "fae_signal_absolute") signal (a signal))
(defcfun (signal-not "fae_signal_not") signal (a signal))
(defcfun (signal-and "fae_signal_and") signal (a signal) (b signal))
(defcfun (signal-or "fae_signal_or") signal (a signal) (b signal))
(defcfun (signal-xor "fae_signal_xor") signal (a signal) (b signal))
(defcfun (signal-bit-not "fae_signal_bit_not") signal (a signal) (b signal))
(defcfun (signal-bit-and "fae_signal_bit_and") signal (a signal) (b signal))
(defcfun (signal-bit-or "fae_signal_bit_or") signal (a signal) (b signal))
(defcfun (signal-bit-xor "fae_signal_bit_xor") signal (a signal) (b signal))
(defcfun (signal-shift-left "fae_signal_shift_left") signal (a signal) (b signal))
(defcfun (signal-shift-right "fae_signal_shift_right") signal (a signal) (b signal))
(defcfun (signal-equal "fae_signal_equal") signal (a signal) (b signal))
(defcfun (signal-less-than "fae_signal_less_than") signal (a signal) (b signal))
(defcfun (signal-greater-than "fae_signal_greater_than") signal (a signal) (b signal))
(defcfun (signal-less-than-equal "fae_signal_less_than_equal") signal (a signal) (b signal))
(defcfun (signal-greater-than-equal "fae_signal_greater_than_equal") signal (a signal) (b signal))
(defcfun (signal-acos "fae_signal_acos") signal (a signal))
(defcfun (signal-asin "fae_signal_asin") signal (a signal))
(defcfun (signal-atan "fae_signal_atan") signal (a signal))
(defcfun (signal-cos "fae_signal_cos") signal (a signal))
(defcfun (signal-sin "fae_signal_sin") signal (a signal))
(defcfun (signal-tan "fae_signal_tan") signal (a signal))
(defcfun (signal-exp "fae_signal_exp") signal (a signal))
(defcfun (signal-log "fae_signal_log") signal (a signal))
(defcfun (signal-log10 "fae_signal_log10") signal (a signal))
(defcfun (signal-pow "fae_signal_pow") signal (a signal))
(defcfun (signal-sqrt "fae_signal_sqrt") signal (a signal))
(defcfun (signal-abs "fae_signal_abs") signal (a signal))
(defcfun (signal-min "fae_signal_min") signal (a signal))
(defcfun (signal-max "fae_signal_max") signal (a signal))
(defcfun (signal-fmod "fae_signal_fmod") signal (a signal))
(defcfun (signal-remainder "fae_signal_remainder") signal (a signal))
(defcfun (signal-floor "fae_signal_floor") signal (a signal))
(defcfun (signal-ceil "fae_signal_ceil") signal (a signal))
(defcfun (signal-rint "fae_signal_rint") signal (a signal))