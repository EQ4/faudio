(in-package :cl-user)
(defctype error-severity :int)
(defctype error-interface (:pointer :void))
(define-foreign-type error-type () () (:actual-type :pointer))
(define-parse-method error () (make-instance 'error-type))
(defclass error () ((error-ptr :initarg :error-ptr)))
(defmethod translate-to-foreign (x (type error-type)) (slot-value x 'error-ptr))
(defmethod translate-from-foreign (x (type error-type)) (make-instance 'error :error-ptr x))
(defcfun (error-check "fae_error_check") :boolean (a ptr))
(defcfun (error-log "fae_error_log") :void (a ptr) (b error))
(defcfun (error-severity "fae_error_severity") error-severity (a error))
(defcfun (error-message "fae_error_message") string (a error))
(defcfun (error-origin "fae_error_origin") string (a error))
(defcfun (error-format "fae_error_format") string (a :boolean) (b error))
(defctype error-callback (:pointer (:pointer :void)))
(defcfun (error-create-simple "fae_error_create_simple") error (a error-severity) (b string) (c string))