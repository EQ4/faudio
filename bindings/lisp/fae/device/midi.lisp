(in-package :cl-user)
(define-foreign-type device-midi-session-type () () (:actual-type :pointer))
(define-parse-method device-midi-session () (make-instance 'device-midi-session-type))
(defclass device-midi-session () ((device-midi-session-ptr :initarg :device-midi-session-ptr)))
(defmethod translate-to-foreign (x (type device-midi-session-type)) (slot-value x 'device-midi-session-ptr))
(defmethod translate-from-foreign (x (type device-midi-session-type)) (make-instance 'device-midi-session :device-midi-session-ptr x))
(define-foreign-type device-midi-stream-type () () (:actual-type :pointer))
(define-parse-method device-midi-stream () (make-instance 'device-midi-stream-type))
(defclass device-midi-stream () ((device-midi-stream-ptr :initarg :device-midi-stream-ptr)))
(defmethod translate-to-foreign (x (type device-midi-stream-type)) (slot-value x 'device-midi-stream-ptr))
(defmethod translate-from-foreign (x (type device-midi-stream-type)) (make-instance 'device-midi-stream :device-midi-stream-ptr x))
(defctype device-midi-session-callback (:pointer (:pointer :void)))
(defctype device-midi-stream-callback (:pointer (:pointer :void)))
(defctype device-midi-status-callback nullary)
(defcfun (device-midi-begin-session "fae_device_midi_begin_session") device-midi-session)
(defcfun (device-midi-end-session "fae_device_midi_end_session") :void (a device-midi-session))
(defcfun (device-midi-with-session "fae_device_midi_with_session") :void (a device-midi-session-callback) (b ptr) (c error-callback) (d ptr))
(defcfun (device-midi-all "fae_device_midi_all") list (a device-midi-session))
(defcfun (device-midi-default "fae_device_midi_default") pair (a device-midi-session))
(defcfun (device-midi-default-input "fae_device_midi_default_input") device-midi (a device-midi-session))
(defcfun (device-midi-default-output "fae_device_midi_default_output") device-midi (a device-midi-session))
(defcfun (device-midi-set-status-callback "fae_device_midi_set_status_callback") :void (a device-midi-status-callback) (b ptr) (c device-midi-session))
(defcfun (device-midi-name "fae_device_midi_name") string (a device-midi))
(defcfun (device-midi-host-name "fae_device_midi_host_name") string (a device-midi))
(defcfun (device-midi-has-input "fae_device_midi_has_input") :boolean (a device-midi))
(defcfun (device-midi-has-output "fae_device_midi_has_output") :boolean (a device-midi))
(defcfun (device-midi-open-stream "fae_device_midi_open_stream") device-midi-stream (a device-midi))
(defcfun (device-midi-close-stream "fae_device_midi_close_stream") :void (a device-midi-stream))
(defcfun (device-midi-with-stream "fae_device_midi_with_stream") :void (a device-midi) (b device-midi-stream-callback) (c ptr) (d error-callback) (e ptr))