(in-package :cl-user)
(define-foreign-type scheduler-type () () (:actual-type :pointer))
(define-parse-method scheduler () (make-instance 'scheduler-type))
(defclass scheduler () ((scheduler-ptr :initarg :scheduler-ptr)))
(defmethod translate-to-foreign (x (type scheduler-type)) (slot-value x 'scheduler-ptr))
(defmethod translate-from-foreign (x (type scheduler-type)) (make-instance 'scheduler :scheduler-ptr x))
(defcfun (scheduler-create "fae_scheduler_create") scheduler (a time-clock))
(defcfun (scheduler-destroy "fae_scheduler_destroy") :void (a scheduler))
(defcfun (scheduler-schedule "fae_scheduler_schedule") :void (a scheduler) (b event))
(defcfun (scheduler-execute "fae_scheduler_execute") :void (a scheduler))
(defcfun (scheduler-loop "fae_scheduler_loop") :void (a scheduler))
(defcfun (scheduler-loop-for "fae_scheduler_loop_for") :void (a time) (b scheduler))