(in-package :faudio)
(define-foreign-type atomic-ring-buffer-type () () (:actual-type :pointer))
(define-parse-method atomic-ring-buffer () (make-instance 'atomic-ring-buffer-type))
(defclass atomic-ring-buffer () ((atomic-ring-buffer-ptr :initarg :atomic-ring-buffer-ptr)))
(defmethod translate-to-foreign (x (type atomic-ring-buffer-type)) (slot-value x 'atomic-ring-buffer-ptr))
(defmethod translate-from-foreign (x (type atomic-ring-buffer-type)) (make-instance 'atomic-ring-buffer :atomic-ring-buffer-ptr x))
(defcfun (atomic-ringbuffer-create "fa_atomic_ring_buffer_create") atomic-ring-buffer (a :int32))
(defcfun (atomic-ringbuffer-destroy "fa_atomic_ring_buffer_destroy") :void (a atomic-ring-buffer))
(defcfun (atomic-ringbuffer-size "fa_atomic_ring_buffer_size") :int32 (a atomic-ring-buffer))
(defcfun (atomic-ringbuffer-read "fa_atomic_ring_buffer_read") :uint8 (a atomic-ring-buffer))
(defcfun (atomic-ringbuffer-read-float "fa_atomic_ring_buffer_read_float") :float (a atomic-ring-buffer))
(defcfun (atomic-ringbuffer-read-double "fa_atomic_ring_buffer_read_double") :double (a atomic-ring-buffer))
(defcfun (atomic-ringbuffer-write "fa_atomic_ring_buffer_write") :boolean (a atomic-ring-buffer) (b :uint8))
(defcfun (atomic-ringbuffer-write-float "fa_atomic_ring_buffer_write_float") :boolean (a atomic-ring-buffer) (b :float))
(defcfun (atomic-ringbuffer-write-double "fa_atomic_ring_buffer_write_double") :boolean (a atomic-ring-buffer) (b :double))

