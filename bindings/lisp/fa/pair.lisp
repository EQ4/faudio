(in-package :faudio)
(define-foreign-type pair-type () () (:actual-type :pointer))
(define-parse-method pair () (make-instance 'pair-type))
(defclass pair () ((pair-ptr :initarg :pair-ptr)))
(defmethod translate-to-foreign (x (type pair-type)) (slot-value x 'pair-ptr))
(defmethod translate-from-foreign (x (type pair-type)) (make-instance 'pair :pair-ptr x))
(defctype pair-struct (:pointer :void))
(defcfun (pair-create "fa_pair_create") pair (a ptr) (b ptr))
(defcfun (pair-read "fa_pair_read") pair (a (:pointer pair-struct)))
(defcfun (pair-write "fa_pair_write") :void (a (:pointer pair-struct)) (b pair))
(defcfun (pair-copy "fa_pair_copy") pair (a pair))
(defcfun (pair-destroy "fa_pair_destroy") :void (a pair))
(defcfun (pair-decons "fa_pair_decons") :void (a (:pointer ptr)) (b (:pointer ptr)) (c pair))
(defcfun (pair-first "fa_pair_first") ptr (a pair))
(defcfun (pair-second "fa_pair_second") ptr (a pair))
(defcfun (pair-duplicate "fa_pair_duplicate") pair (a ptr))
(defcfun (pair-swap "fa_pair_swap") pair (a pair))
(defcfun (pair-assoc "fa_pair_assoc") pair (a pair))
(defcfun (pair-unassoc "fa_pair_unassoc") pair (a pair))
(defcfun (pair-to-list "fa_pair_to_list") list (a pair))

