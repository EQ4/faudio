(in-package :audio-engine)
(define-foreign-type device-audio-session-type () () (:actual-type :pointer))
(define-parse-method device-audio-session () (make-instance 'device-audio-session-type))
(defclass device-audio-session () ((device-audio-session-ptr :initarg :device-audio-session-ptr)))
(defmethod translate-to-foreign (x (type device-audio-session-type)) (slot-value x 'device-audio-session-ptr))
(defmethod translate-from-foreign (x (type device-audio-session-type)) (make-instance 'device-audio-session :device-audio-session-ptr x))
(define-foreign-type device-audio-stream-type () () (:actual-type :pointer))
(define-parse-method device-audio-stream () (make-instance 'device-audio-stream-type))
(defclass device-audio-stream () ((device-audio-stream-ptr :initarg :device-audio-stream-ptr)))
(defmethod translate-to-foreign (x (type device-audio-stream-type)) (slot-value x 'device-audio-stream-ptr))
(defmethod translate-from-foreign (x (type device-audio-stream-type)) (make-instance 'device-audio-stream :device-audio-stream-ptr x))
(defctype device-audio-session-callback (:pointer (:pointer :void)))
(defctype device-audio-stream-callback (:pointer (:pointer :void)))
(defcfun (device-audio-begin-session "doremir_device_audio_begin_session") device-audio-session)
(defcfun (device-audio-end-session "doremir_device_audio_end_session") :void (a device-audio-session))
(defcfun (device-audio-with-session "doremir_device_audio_with_session") :void (a device-audio-session-callback))
(defcfun (device-audio-all "doremir_device_audio_all") list (a device-audio-session))
(defcfun (device-audio-default "doremir_device_audio_default") pair (a device-audio-session))
(defcfun (device-audio-default-input "doremir_device_audio_default_input") device-audio (a device-audio-session))
(defcfun (device-audio-default-output "doremir_device_audio_default_output") device-audio (a device-audio-session))
(defcfun (device-audio-name "doremir_device_audio_name") string (a device-audio))
(defcfun (device-audio-host-name "doremir_device_audio_host_name") string (a device-audio))
(defcfun (device-audio-has-input "doremir_device_audio_has_input") :boolean (a device-audio))
(defcfun (device-audio-has-output "doremir_device_audio_has_output") :boolean (a device-audio))
(defcfun (device-audio-channels "doremir_device_audio_channels") pair (a device-audio))
(defcfun (device-audio-open-stream "doremir_device_audio_open_stream") device-audio-stream (a device-audio) (b processor) (c device-audio))
(defcfun (device-audio-close-stream "doremir_device_audio_close_stream") :void (a device-audio-stream))
(defcfun (device-audio-with-stream "doremir_device_audio_with_stream") :void (a device-audio) (b processor) (c device-audio) (d device-audio-stream-callback))