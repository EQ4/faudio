(in-package :doremir)
(defctype midi-status :int)
(defctype midi-channel :int)
(defctype midi-data :int)
(define-foreign-type midi-type () () (:actual-type :pointer))
(define-parse-method midi () (make-instance 'midi-type))
(defclass midi () ((midi-ptr :initarg :midi-ptr)))
(defmethod translate-to-foreign (x (type midi-type)) (slot-value x 'midi-ptr))
(defmethod translate-from-foreign (x (type midi-type)) (make-instance 'midi :midi-ptr x))
(defcfun (midi-create-simple "doremir_midi_create_simple") midi (a midi-status) (b :int) (c :int))
(defcfun (midi-create-sysex "doremir_midi_create_sysex") midi (a buffer))
(defcfun (midi-copy "doremir_midi_copy") midi (a midi))
(defcfun (midi-destroy "doremir_midi_destroy") :void (a midi))
(defcfun (midi-status "doremir_midi_status") midi-status (a midi))
(defcfun (midi-channel "doremir_midi_channel") midi-channel (a midi))
(defcfun (midi-is-simple "doremir_midi_is_simple") :boolean (a midi))
(defcfun (midi-simple-data "doremir_midi_simple_data") pair (a midi))
(defcfun (midi-is-sysex "doremir_midi_is_sysex") :boolean (a midi))
(defcfun (midi-sysex-data "doremir_midi_sysex_data") buffer (a midi))