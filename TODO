
Only one audio stream
Multiple Midi streams OK

We will use the "big buffer" approach
    Everything is inline (or processors allocate intermediate themselves)

    Seq requires the max size of its children
    Par requires the sum size of its children
    Split requires its output size (ie its input*2)
    We implement frames as vectors (of max size) with padded 0
        Ie no reallocation is necessary if the vector size changes

    Problem: buffer_t is not dividable
        Change processor to accept void* instead of buffer_t ?
        Or fix SOS-acceptable way to divide a buffer_t       ?

==========
Additions

* Generic for_each (by toList method?)

* Implement ringbuffer

* Implement non-realtime streams

* Implement realtime audio streams

* Implement realtime midi streams

* Implement priority queue

* Implement schedulers

* High-level Lisp bindings



* Device detection
    * See PortAudio tracker
         https://www.assembla.com/spaces/portaudio/tickets/11-add-callback-api-for-detecting-connection-removal-of-devices#/activity/ticket:

    * OS X
        http://stackoverflow.com/questions/3611644/coreaudio-getting-device-count-breaks-when-linking-to-foundation-on-10-6

    * Windows          
        http://msdn.microsoft.com/en-us/library/windows/desktop/dd371417%28v=vs.85%29.aspx
        * See that CoInitializeEx (or Windows::Foundation::Initialize) is called
        * Implement IMMNotificationClient
        * Create instance of IMMDeviceEnumerator by CoCreate()
        * Pass to IMMDeviceEnumerator::RegisterEndpointNotificationCallback(cb)
        * Pass to IMMDeviceEnumerator::UnregisterEndpointNotificationCallback(cb)
        

* Vector/SIMD support
    * Probably use GCC intrincics (implemented in clang too)
    * Check alignment w.r.t. doremir_type_t.
        http://stackoverflow.com/questions/5118158/using-sse-to-speed-up-computation-store-load-and-alignment
        http://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html
        http://clang.llvm.org/docs/LanguageExtensions.html#vectors-and-extended-vectors

==========
Misc issues

* Make Modulo support interfaces (i.e. generate numbers in interfaces.h)
* Make Modulo support explicit one-level above names (doremir_device_audio_stream_callback_t etc)

* Check if we can make Fluidsynth compile against checked in Glib
  binaries instead of /usr/local
  * Done? 
    Tis 28 Aug 2012 22:46:06 CEST

* Come up with better way to include ASIOSDK in Portaudio (new
  submodule? nested?)

* Set visibility=hidden on OS X. See Apple documentation 'Dynamic
  Library Programming Topics'

* Update ScoreCleanerAudio/Resources/Info.plist, see Apple
  documentation 'Framework Programming Guide'

* Logging functions on OS X must create dir ~/Library/Logs/ScoreCleaner
  if not present

* DLL name and linkage on Windows
  * Still relevant?
    Tis 28 Aug 2012 22:46:06 CEST
