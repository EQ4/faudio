
/**
    @defgroup SclAtomicRingBuffer Concurrency: Atomic ringbuffer
    @brief Atomic circular buffer
 */
module Scl.Atomic.RingBuffer
{
    type RingBuffer = IntPtr;

    create : (RingBuffer) -> RingBuffer;
    copy : (RingBuffer) -> RingBuffer;
    destroy : (RingBuffer) -> Void;

    read : (RingBuffer) -> IntPtr;
    write : (RingBuffer, IntPtr) -> IntPtr;
}

