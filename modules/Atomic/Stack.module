
/**
    Provides an atomic queue (first in, last out) data structure
    @defgroup DoremirAtomicStack Concurrency: Atomic stacks
 */
module Doremir.Atomic.Stack
{
    type Stack = IntPtr;
    
    create : () -> Stack;
    destroy : (Stack) -> Void;
    
    read : (Stack) -> IntPtr;
    write : (Stack, IntPtr) -> IntPtr;
}

