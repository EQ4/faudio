
/**
    Provides an atomic queue (first in, first out) data structure
    @defgroup DoremirAtomicQueue Concurrency: Atomic queues
 */
module Doremir.Atomic.Queue
{
    type Queue = Intptr;
    
    create : () -> Queue;
    destroy : (Queue) -> Void;
    
    read : (Queue) -> Intptr;
    write : (Queue, Intptr) -> Intptr;
}

