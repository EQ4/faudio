
/**
    Provides an atomic queue (first in, first out) data structure
    @defgroup DoremirAtomicQueue Concurrency: Atomic queues
 */
module Doremir.Atomic.Queue
{
    type Queue = IntPtr;
    
    create : () -> Queue;
    destroy : (Queue) -> Void;
    
    read : (Queue) -> IntPtr;
    write : (Queue, IntPtr) -> IntPtr;
}

