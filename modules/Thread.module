
/**
 */
module Doremir.Thread
{
    type Thread = Intptr;
    type Mutex = Intptr;
    type Condition = Intptr;
    
    createThread : () -> Thread;
    join : (Thread) -> Void;
    detach : (Thread) -> Void;
    
    createLock : () -> Lock;
    destroyLock : (Lock) -> Void;
    lock : (Mutex) -> Bool;
    tryLock : (Mutex) -> Bool;
    unlock : (Mutex) -> Bool;

    createCondition : () -> Condition;
    waitFor : (Condition) -> Void;
    notify : (Condition) -> Void;
    notifyAll : (Condition) -> Void;
}

