
/**
    Provides various clocks.
        
    As one might expect, a clock is a provider of time. A clock in *faudio*,
    however does not usually indicate real-world time, but the current time
    of an audio computation.

    The most accurate clocks are those derived directly from an audio stream. See
    @ref fa_audio_stream_clock.

    @par Implements
    - fa_string_show_t (all clock types)
    - fa_destroy_t (all clock types)

    @since
        2.3
 */
module Fa.Clock
{
    import Fa;
    import Fa.Time;

    type Interface = struct {
        time         : (Ptr -> Time)*,
        milliseconds : (Ptr -> Int64)*
    };                 

    /** A value of an unknown type implementing @ref fa_clock_interface_t.
     */
    type Clock = opaque;

    /** Returns the current time according to the given clock.
        @param clock
            Clock to use.
        @return
            The current time.
     */
    time : Clock -> Time;

    /** Returns the current time in milliseconds according to the given clock.
        @param clock
            Clock to use.
        @return
            The current time in milliseconds.
     */
    milliseconds : Clock -> Milliseconds;

    /** Returns the standard clock.
        @return
            A clock.
     */
    standard : () -> Clock;
}

