
/** 

Basic options parser.
    
Example:

~~~
fa_option_t options[] = {
    { "h", "help",            "Show help info",             fa_option_parse_string },
    { "x", "value-with-def",  "Show help info",             fa_option_parse_int    },
    { "n", "number-of-cores", "Number of cores\n                                   "
                              "Very interesting parameter", fa_option_parse_int    }
};

int main(int argc, char const *argv[])
{
    fa_option_show_all(
        options,
        "Usage: fa_options\n"
        "       fa_options [FILES]\n"
        );
                
    fa_unpair(
        fa_option_parse_all(options, argc, (char**) argv), 
        options,
        arguments
        ) 
    {
        fa_print_ln(options);   // {"foo": 1, "bar": 2}
        fa_print_ln(arguments); // [1,2,3]
    }
}
~~~    
    
 */
module Fa.Option
{
    import Fa;
    import Fa.Std;
    import Fa.String;
    import Fa.Pair;

    type Option = struct {
        shortName   : Char*,
        longName    : Char*,
        description : Char*,
        parser      : (Char * -> Ptr)*
    };

    parse   : (Int, [Option x 1], Int, Char**) -> Pair;
    show    : (Int, [Option x 1], Char*) -> Void;
    parseInt       : (Char *)            -> Ptr;
    parseFloat     : (Char *)            -> Ptr;
    parseDouble    : (Char *)            -> Ptr;
    parseString    : (Char *)            -> Ptr;
    parseFail      : (Char *)            -> Ptr;    
}