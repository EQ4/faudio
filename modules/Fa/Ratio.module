
/** 
    @addtogroup FaRatio
    
    Fixed-precision rational numbers.

    @par Literals
    - `ratio(1, 2)`
    - `ratio(0, 1)`
    - `ratio(-1, 2)`

    @par Implements 
    - fa_equal_t
    - fa_order_t
    - fa_string_show_t
    - fa_copy_t
    - fa_destroy_t
    - fa_dynamic_t
    - fa_number_t

 */
module Fa.Ratio 
{
    import Fa.Std;

    type Num    = Int32;
    type Denom  = Int32;
    type Ratio  = opaque;

    /** Create a rational number.
     */
    create  : (Num, Denom) -> Ratio;
    /** Return the numerator of the given rational number.
     */
    num     : Ratio -> Num;
    /** Return the denominator of the given rational number.
     */
    denom   : Ratio -> Denom;
    /** Destruct the given rational number, writing its numerator
        and denominator to the given locations.
     */
    match   : (Ratio, Num*, Denom*) -> Void;
    /** Copy a rational number.
     */
    copy    : Ratio -> Ratio;
    /** Destroy a rational number.
     */
    destroy : Ratio -> Void;
            
    /** Add the given rational numbers.
     */
     add         : (Ratio, Ratio) -> Ratio;
    /** Subtract the given rational numbers.
     */
     subtract    : (Ratio, Ratio) -> Ratio;
    /** Multiply the given rational numbers.
     */
     multiply    : (Ratio, Ratio) -> Ratio;
    /** Divide the given rational numbers.
     */
     divide      : (Ratio, Ratio) -> Ratio;
    /** Return the successor of the given rational number.
     */
     succ        : Ratio -> Ratio;
    /** Return the predecessor of the given rational number.
     */
     pred        : Ratio -> Ratio;
    /** Negate the given rational number.
     */
     negate      : Ratio -> Ratio;
    /** Invert the given rational number.
     */
    recip       : Ratio -> Ratio;
    /** Return the absolute value of the given rational number.
     */
    absolute    : Ratio -> Ratio;

    /** Normalize the given rational number.
     */
    normalize : Ratio -> Ratio;
    /** Convert the given rational number to mixed form.

        For example \f$11/3\f$ becomes \f$3+2/3\f$.
     */
    toMixed : (Ratio, Num*, Ratio*) -> Void;
}

