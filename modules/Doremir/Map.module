
/** 
    @addtogroup DoremirMap
    
    Immutable ordered map data structure.

    @par Requires 
    - doremir_order_t
    @par Implements 
    - doremir_equal_t
    - doremir_copy_t
    - doremir_destroy_t
    - doremir_dynamic_t
    - doremir_string_show_t
    @see 
    - @ref Collections
    
 */
module Doremir.Map 
{
    import Doremir;
    import Doremir.Pair;
    import Doremir.String;
    
    type Map = opaque;
    type Key = Ptr;

    // Constructors
    empty            : () -> Map;
    add              : (Pair, Map) -> Map;
    remove           : (Pair, Map) -> Void;
    copy             : Map -> Map;
    destroy          : Map -> Void;

    fromPair         : Pair -> Map;
    fromList         : Pair -> Map;

    // Size
    size             : Map -> Int;
    isEmpty          : Map -> Bool;
    isSingle         : Map -> Bool;

    // Lookup function
    get              : (Key, Map) -> Ptr;

    // Predicates
    hasKey           : (Key, Map) -> Bool;
    hasElem          : (Ptr, Map) -> Bool;
    hasEntry         : (Pair, Map) -> Bool;
    isSubmapOf       : (Map, Map) -> Bool;
    isProperSubmapOf : (Map, Map) -> Bool;

    // Set operations
    sum              : (Map, Map) -> Map;
    product          : (Map, Map) -> Map;
    difference       : (Map, Map) -> Map;
    cartesian        : (Map, Map) -> Map;
    power            : Map -> Map;

}