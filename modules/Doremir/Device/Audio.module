
/**
    @addtogroup DoremirDeviceAudio

    Real-time audio device.

    @par Sessions, devices and streams implement 
    - doremir_destroy_t
    - doremir_string_show_t

    @par Devices also implement 
    - doremir_equal_t

    @par Streams also implement 
    - doremir_message_sender_t
    - doremir_message_receiver_t
    
    @see 
    - @ref Devices
 */
module Doremir.Device.Audio
{
    import Doremir.List;
    import Doremir.Pair;
    import Doremir.Device;
    import Doremir.Error;
    import Doremir.Processor;

    type Session = opaque;
    type Stream = opaque;
    type SessionCallback = ((Ptr, Session) -> Session)*;
    type StreamCallback = ((Ptr, Stream) -> Stream)*;
    type StatusCallback = Nullary;

    beginSession : () -> Session;
    endSession : Session -> Void;
    withSession : (
        SessionCallback, Ptr, 
        Callback, Ptr) -> Void;

    all : Session -> List;      // [Audio]
    default : Session -> Pair;  // (Audio,Audio)
    defaultInput : Session -> Audio;
    defaultOutput : Session -> Audio;
    setStatusCallback : (StatusCallback, Ptr, Session) -> Void;

    name : Audio -> String;
    hostName : Audio -> String;
    inputType : Audio -> Type;
    outputType : Audio -> Type;

    openStream : (Audio, Processor, Audio) -> Stream;
    closeStream : Stream -> Void;
    withStream : (
        Audio, Processor, Audio, 
        StreamCallback, Ptr, 
        Callback, Ptr
        ) -> Void;

}

