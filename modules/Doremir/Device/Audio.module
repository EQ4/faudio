
/**
    @addtogroup DoremirDeviceAudio

    Real-time audio device.

    @par Sessions, devices and streams implement 
    - doremir_destroy_t
    - doremir_string_show_t

    @par Devices also implement 
    - doremir_equal_t

    @par Streams also implement 
    - doremir_message_sender_t
    - doremir_message_receiver_t
    
    @see 
    - @ref Devices
 */
module Doremir.Device.Audio
{
    import Doremir.List;
    import Doremir.Pair;
    import Doremir.Message;
    import Doremir.Processor;

    type DeviceAudio = opaque;  // TODO call Device
    type Session = opaque;
    type Stream = opaque;

    all : Session -> List;      // [DeviceAudio]
    default : Session -> Pair;  // (DeviceAudio,DeviceAudio)

    name : DeviceAudio -> String;
    hostName : DeviceAudio -> String;
    hasInput : DeviceAudio -> Bool;
    hasOutput : DeviceAudio -> Bool;
    channels : DeviceAudio -> Pair;

    beginSession : () -> Session;
    restartSession : Session -> Session;
    endSession : Session -> Void;

    startStream : (DeviceAudio, Processor, DeviceAudio) -> Stream;
    restartStream : Stream -> Stream;
    stopStream : Stream -> Void;

    type SessionCallback = (Session -> Session)*;
    type StreamCallback = (Stream -> Stream)*;

    withSession : SessionCallback -> Void;
    withStream : (DeviceAudio, Processor, DeviceAudio, StreamCallback) -> Void;
}

