
/**
    @addtogroup DoremirMessage

    Provides message dispatching.

    Dispatching is the action of delivering a *message* to an *address*.
    
    TODO elaborate

 */
module Doremir.Message
{
    import Doremir;
    import Doremir.Std;
    import Doremir.Pair;
    import Doremir.List;

    type Address = Ptr; // Must be ordered
    type Message = Ptr;

    type Dispatcher = opaque;
    
    createDispatcher : () -> Dispatcher;
    createLockfreeDispatcher : () -> Dispatcher;
    destroyDispatcher : Dispatcher -> Void;
    
    // Request message to be sent on address
    send : (Address,Message,Dispatcher) -> Void;

    // Fetch messages on address
    // Other addresses discarded
    fetch : (Address,Dispatcher) -> List; // [Message]

    // Fetch all new messages
    sync : Dispatcher -> Void;
    // Get fetched messages on addresses
    query : (Address,Dispatcher) -> List; // [Message]


}