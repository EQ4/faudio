
/** 
    Provides the chase data structure. 
    
    A *chase* is a sequence represented as a series of *tracks*, that is, uniquely linked arrays of
    variable length. It has an efficient destructive append operation, supports indirect moving and is
    structurally invariant under casts.

    @author     Hans HÃ¶glund
 */
module Doremir.Chase 
{
    import Doremir.Pair;
    
    type Chase  = opaque;
    type Value  = Intptr;
    // type Track  = Intptr;
            
    empty       : () -> Chase;
    create      : (Type, Size) -> Chase;
    destroy     : (Chase) -> Void;

    // release     : (Chase) -> Track;
    // reset       : (Track) -> Chase;
    append      : (Chase, Chase) -> Void;
    
    isEmpty     : (Chase) -> Bool;
    isSingle    : (Chase) -> Bool;
    lenght      : (Chase) -> Int;

    type UnaryFunc = Intptr;
    map         : (UnaryFunc, Chase) -> Chase;
    mapDest     : (UnaryFunc, Chase) -> Chase;
}