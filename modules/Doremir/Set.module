
/** 
    @addtogroup DoremirSet
    
    Immutable ordered set data structure.


    @par Literals
    - `set(1, 2, 3)`

    @par Display
    - `{1,2,3}`
    
    @par Requires 
    - doremir_order_t

    @par Implements 
    - doremir_equal_t
    - doremir_string_show_t
    - doremir_copy_t
    - doremir_destroy_t
    - doremir_dynamic_t

    @see 
    - [Data structures](@ref DataStructures)
    
 */
module Doremir.Set
{
    import Doremir;
    import Doremir.List;
    import Doremir.String;

    type Set = opaque;
    
    // Constructors
    empty            : () -> Set;
    single           : Ptr -> Set;
    add              : (Ptr, Set) -> Set;
    remove           : (Ptr, Set) -> Set;
    dadd             : (Ptr, Set) -> Set;
    dremove          : (Ptr, Set) -> Set;
    copy             : Set -> Set;
    destroy          : Set -> Void;    

    // Size
    size             : Set -> Int;
    isEmpty          : Set -> Bool;
    isSingle         : Set -> Bool;

    // Predicates
    has              : (Ptr, Set) -> Bool;
    isSubsetOf       : (Set, Set) -> Bool;
    isProperSubsetOf : (Set, Set) -> Bool;

    // Set operations
    sum              : (Set, Set) -> Set;
    product          : (Set, Set) -> Set;
    difference       : (Set, Set) -> Set;
    power            : Set -> Set;

    // Conversions   
    fromList         : List -> Set;
    toList           : Set -> List;
}

