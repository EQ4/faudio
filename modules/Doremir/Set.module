
/** 
    @addtogroup DoremirSet
    
    Immutable ordered set data structure.

    \warning To store a primitive (non-pointer) value in a collection, the \ref WrapperFunctions must be used.

 */
module Doremir.Set
{
    import Doremir;

    type Set = opaque;
    
    elem           : (Set, Ptr) -> Bool;
    subsetOf       : (Set, Set) -> Bool;
    properSubsetOf : (Set, Set) -> Bool;

    empty   : () -> Set;
    // TODO what about equality?
    add     : (Set, Ptr) -> Set;
    remove  : (Set, Ptr) -> Void;
    addUnique     : (Set, Ptr) -> Set;
    removeUnique  : (Set, Ptr) -> Void;

    unionOf : (Set, Set) -> Set;
    productOf : (Set, Set) -> Set;
    symmetricDifferenceOf : (Set, Set) -> Set;
    cartesianProductOf : (Set, Set) -> Set;
    powerSetOf : Set -> Set;
}