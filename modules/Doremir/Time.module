
/**
    @addtogroup DoremirTime

    Aribitrary precision time interval.

    This type uses standard time units, with arbitrary divisions of a second.
    Allthough day is the longest unit, times longer than a day are supported by
    this type; they are simply expressed as  days instead of years, weaks and months.
    Thus no particular calendar has to be adopted.


    @par Literals
    - `time(0,0,1,30)`
    - `time(30,0,0,0)`
    - `days(2)`
    - `hours(2)`
    - `minutes(3)`
    - `seconds(4)`
    - `milliseconds(4)`
    - `nanoseconds(3500)`
    - `fract_seconds(1, 3)`
    - `add(minutes(1), milliseconds(100))`
    - `sub(hours(0), seconds(2))`

    @par Implements
    - doremir_equal_t
    - doremir_order_t
    - doremir_string_show_t
    - doremir_copy_t
    - doremir_destroy_t
    - doremir_dynamic_t
    - doremir_number_t

 */
module Doremir.Time
{
    import Doremir;
    import Doremir.Ratio;
    import Doremir.String;

    type Time = opaque;

    create      : (Int32, Int32, Int32, Ratio) -> Time;
    copy        : Time -> Time;
    destroy     : Time -> Void;

    days        : Time -> Int32;
    hours       : Time -> Int32;
    minutes     : Time -> Int32;
    seconds     : Time -> Int32;
    divisions   : Time -> Ratio;

    toIso : Time -> String;
}