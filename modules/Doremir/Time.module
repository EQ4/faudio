
/**
    @addtogroup DoremirTime
    
    Immutable time representation.
    
    Represents a point in time from an arbitrary offset using standard units. This type uses
    rational numbers to support arbitrary divisions of a second. Allthough day is the longest
    unit, times longer than a day are supported by this type (they are simply expressed as
    days instead of weeks, months etc).
    
    
    @par Implements 
        doremir_equal_t
        doremir_order_t
        doremir_string_show_t
        doremir_copy_t
        doremir_destroy_t
        doremir_dynamic_t
        doremir_number_t
    
 */
module Doremir.Time
{     
    import Doremir;
    import Doremir.Ratio;
    import Doremir.String;
    
    // type Unit = enum {
    //     Second,
    //     Minute,
    //     Hour,
    //     Day
    // };
    // 
    type Time = opaque;

    create      : (Int32, Int32, Int32, Ratio) -> Time;
    copy        : Time -> Time;
    destroy     : Time -> Void;
    
    days        : Time -> Int32;
    hours       : Time -> Int32;
    minutes     : Time -> Int32;
    seconds     : Time -> Int32;
    divisions   : Time -> Ratio;
    
    toIso : Time -> String;
}