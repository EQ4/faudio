
/**
 */
module Doremir.Thread
{
    import Doremir.Std;

    type Thread = opaque;
    type Mutex = opaque;
    type Condition = opaque;
    
    createThread : () -> Thread;
    join : Thread -> Void;
    detach : Thread -> Void;
    
    createMutex : () -> Mutex;
    destroyMutex : Mutex -> Void;
    lock : Mutex -> Bool;
    tryLock : Mutex -> Bool;
    unlock : Mutex -> Bool;

    createCondition : () -> Condition;
    waitFor : Condition -> Void;
    notify : Condition -> Void;
    notifyAll : Condition -> Void;
}

