
/**
    @addtogroup DoremirThread

    Cross-platform threads.

    Standard low-level constructs such as threads, mutexes and conditions are
    provided by this module. For more high-level blocking constructs, see
    the \ref DoremirThreadFuture and \ref DoremirThreadImproving modules. For non-blocking communication
    see the \ref DoremirAtomic modules.

 */
module Doremir.Thread
{
    import Doremir;
    import Doremir.Std;

    type Thread = opaque;
    type Mutex = opaque;
    type Condition = opaque;
    type Millis = Int;

    create  : (Nullary, Ptr) -> Thread;
    sleep   : Millis -> Void;
    join    : Thread -> Void;
    detach  : Thread -> Void;

    createMutex     : () -> Mutex;
    destroyMutex    : Mutex -> Void;
    lock            : Mutex -> Bool;
    tryLock         : Mutex -> Bool;
    unlock          : Mutex -> Bool;

    createCondition     : Mutex -> Condition;
    destroyCondition    : Condition -> Void;
    waitFor             : Condition -> Void;
    notify              : Condition -> Void;
    notifyAll           : Condition -> Void;
}

