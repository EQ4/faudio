
/** 
    @addtogroup Doremir
    @addtogroup Thread
    
    Cross-platform threads.
    
    Standard low-level constructs such as threads, mutexes and conditions are 
    provided by this module. For more high-level blocking constructs, see
    the \ref Future and \ref Improving modules. For non-blocking communication
    see the \ref Atomic modules.

 */
module Doremir.Thread
{
    import Doremir.Std;

    type Runnable = struct { f : (Intptr -> Intptr)*, x : Intptr };
    type Thread = opaque;
    type Mutex = opaque;
    type Condition = opaque;
    type MilliSeconds = Int;
    
    create : (Runnable) -> Thread;
    sleep : MilliSeconds -> Void;
    join : Thread -> Void;
    detach : Thread -> Void;
    
    createMutex : () -> Mutex;
    destroyMutex : Mutex -> Void;
    lock : Mutex -> Bool;
    tryLock : Mutex -> Bool;
    unlock : Mutex -> Bool;

    createCondition : Mutex -> Condition;
    destroyCondition : Condition -> Void;
    waitFor : Condition -> Void;
    notify : Condition -> Void;
    notifyAll : Condition -> Void;
}

