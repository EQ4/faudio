
/**
    @addtogroup DoremirProcessor
    
    Provides signal processors.
    
 */
module Doremir.Processor
{
    import Doremir;
    import Doremir.Type;
    import Doremir.Buffer;

    type Samples = Buffer;

    type Info = struct {
        sampleRate : Double,
        sampleCount : Long,
        realTime : Bool
    };

    /** @interface doremir_processor_t */
    type Processor = struct {
        before  : ((Ptr, Info*) -> Void)*,
        process : ((Ptr, Info*, Samples) -> Samples)*,
        after   : ((Ptr, Info*) -> Void)*
    };
    
    type Any = Ptr;   
    
    lift   : (Type, Unary*) -> Any;
    lift2  : (Type, Binary*) -> Any;
    lift3  : (Type, Ternary*) -> Any;
    
    id     : Type -> Any;
    const  : (Type, Ptr) -> Any;
    delay  : Any -> Any;
    split  : Any -> Any;

    seq    : (Any, Any) -> Any;
    par    : (Any, Any) -> Any;    
    loop   : Any -> Any;

    
    cos    : Type -> Any;
    sin    : Type -> Any;
    tan    : Type -> Any;
    acos   : Type -> Any;
    asin   : Type -> Any;
    atan   : Type -> Any;
    
}