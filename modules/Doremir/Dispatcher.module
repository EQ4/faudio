
/**
    @addtogroup DoremirDispatcher
    
    Provides message dispatching.
    
    Dispatching is the action of delivering a *message* to an *address*, where
    the message is a dynamic collection and adderss is a pointer-sized value.
    
 */
module Doremir.Dispatcher
{
    import Doremir;
    import Doremir.Std;
    import Doremir.List;

    type Address = Ptr;
    type Message = Ptr;

    /** @interface doremir_dispatcher_receiver_t */
    type Receiver = struct {
        receive : ((Ptr, Address, Message) -> Void)*
    };

    /** @interface doremir_dispatcher_t */
    type Dispatcher = struct {
        addReceiver : ((Ptr, Ptr) -> Void)*,
        removeReceiver : ((Ptr, Ptr) -> Void)*
    };
}