
/** 
    @addtogroup DoremirAtomic
    
    An atomic reference.

    @par Literals
    - `atomic()` 

    @par Implements 
    - doremir_equal_t
    - doremir_order_t
    - doremir_copy_t
    - doremir_destroy_t
    - doremir_string_show_t

    @see 
    - [Data structures](@ref DataStructures)
 */
module Doremir.Atomic
{                   
    import Doremir;
    import Doremir.Std;
    
    type Atomic = opaque;

    create  : () -> Atomic;
    copy    : Atomic -> Atomic;
    swap    : (Atomic, Atomic) -> Void;
    destroy : Atomic -> Void;

    exchange : (Atomic, Ptr, Ptr) -> Bool;
    get     : Atomic -> Ptr;
    set     : (Atomic, Ptr) -> Void;
    modify  : (Atomic, Unary, Ptr) -> Void;

    // increment : (Atomic, Ptr) -> Void;
}

