
/**
    Type system of audio computations:

        int8          Signed 8-bit integer
        int32         Signed 32-bit integer
        int64         Signed 64-bit integer
        float32       32-bit floating point sample
        float64       64-bit floating point sample
        midi_message  Midi message
        ()            Unit value

        (A,B)         Pair of A and B
        [A]           Variable sized list of A
        {A x N}       N-sized array of A
        A ~> B        Processor from A to B

        identity : a ~> a
        const    : b ~> a
        unary    : a ~> b
        binary   : (a,b) ~> c
        ternary  : (a,(b,c)) ~> d
        random   : b ~> a
        split    : a ~> (a,a)
        sequence : (a ~> b) -> (b ~> c) -> (a ~> c)
        parallel : (a ~> b) -> (c ~> d) -> ((a,c) ~> (b,d))
        feedback : ((a,c) ~> (b,c)) -> (a ~> b)
        delay    : a ~> a

    The audio_type class representation these types at runtime and provides
    dynamic type checking (but not inference).

    The static version of the audio types:
    
        TODO
    
    The runtime representation of the audio types:

        TODO
        
    Conversion functions, specialized for each audio type:

        TODO
        

    Binary format:
      - Concrete types maps to their binary representation
      - (A,B)  maps to the binary representation of A followed by a padding, followed by the represention of B folowed by a padding
        - The size and offset of (A,B) is determined by audio_type
      - <A x N> maps to A[N]
      - [A] maps to chase<A>::track_pointer

    @defgroup DoremirAudioTypes Misc: Audio types
 */
module Doremir.Audio.Types
{

}