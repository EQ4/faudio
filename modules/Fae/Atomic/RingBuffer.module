
/** 
    @addtogroup FaeAtomicRingBuffer
    
    A byte-level, bounded lock-free queue.
    
    This structure is called a buffer for historical reasons, it is more accurately
    a queue and does not support random accces.
    
    @warning
        Not fully implemented.
        

    @par Literals
    - `atomic_ring_buffer(size)` 

    @par Implements 
    - fae_destroy_t
    - fae_string_show_t

    @see 
    - [Data structures](@ref DataStructures)

 */
module Fae.Atomic.RingBuffer
{            
    import Fae;
    
    type RingBuffer = opaque;

    create : Size -> RingBuffer;
    copy : RingBuffer -> RingBuffer;
    resize : (Size, RingBuffer) -> RingBuffer;
    swap : (RingBuffer, RingBuffer) -> Void;
    destroy : RingBuffer -> Void;

    size : RingBuffer -> Size;  
    read : RingBuffer -> UInt8;
    write : (RingBuffer, UInt8) -> Bool;
}

